<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ JBoss, Home of Professional Open Source.
  ~ Copyright 2010, Red Hat, Inc., and individual contributors
  ~ as indicated by the @author tags. See the copyright.txt file in the
  ~ distribution for a full listing of individual contributors.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.jboss</groupId>
    <artifactId>jboss-parent</artifactId>
    <version>9</version>
  </parent>
  <groupId>org.gatein.wcm</groupId>
  <artifactId>gatein-wcm</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>GateIn WCM</name>
  <scm>
    <url>https://github.com/lucasponce/gatein-wcm</url>
  </scm>
  <issueManagement>
    <system>jira</system>
    <url>http://issues.jboss.org/browse/GTNWCM</url>
  </issueManagement>

  <licenses>
    <license>
      <name>GNU Lesser General Public License</name>
      <url>http://repository.jboss.org/licenses/lgpl-2.1.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>

  <properties>
    <version.javax.servlet>2.5</version.javax.servlet>
    <version.javax.portlet>2.0</version.javax.portlet>

    <jbossas-version>7.1.1.Final</jbossas-version>
    <jbossas7.assembly.descriptor.version>71</jbossas7.assembly.descriptor.version>
    <modeshape.version>3.1.3.Final</modeshape.version>
    <chemistry.version>0.7.0</chemistry.version>

    <org.exoplatform.kernel.version>2.4.1-GA</org.exoplatform.kernel.version>
    <org.exoplatform.core.version>2.5.1-CP01</org.exoplatform.core.version>
    <gatein.version>3.5.0.Final</gatein.version>

    <maven.compiler.target>1.6</maven.compiler.target>
    <maven.compiler.source>1.6</maven.compiler.source>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <arquillian.version>1.0.3.Final</arquillian.version>
    <debug.argline />

    <checkstyle.version>2.9.1</checkstyle.version>

  </properties>

  <modules>
    <module>gatein-wcm-api</module>
    <!-- Uncomment to activate it -->
    <!-- <module>gatein-wcm-portlets</module> -->
    <module>gatein-wcm-impl</module>
    <module>gatein-wcm-impl-sec</module>
    <module>gatein-wcm-distribution</module>
    <module>gatein-wcm-integration-tests</module>
  </modules>

  <dependencyManagement>
    <dependencies>
      <!-- JBoss distributes a complete set of Java EE 6 APIs including
        a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or
        a collection) of artifacts. We use this here so that we always get the correct
        versions of artifacts. Here we use the jboss-javaee-6.0-with-tools stack
        (you can read this as the JBoss stack of the Java EE 6 APIs, with some extras
        tools for your project, such as Arquillian for testing) -->
      <dependency>
        <groupId>org.jboss.bom</groupId>
        <artifactId>jboss-javaee-6.0-with-tools</artifactId>
        <version>1.0.0.M11</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- Import the ModeShape BOM for embedded usage. This adds to the "dependenciesManagement"
        section defaults for all of the modules we might need, but we still have
        to include in the "dependencies" section the modules we DO need. The benefit
        is that we don't have to specify the versions of any of those modules. -->
      <dependency>
        <groupId>org.modeshape.bom</groupId>
        <artifactId>modeshape-bom-jbossas</artifactId>
        <version>${modeshape.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.modeshape.bom</groupId>
        <artifactId>modeshape-bom-embedded</artifactId>
        <version>${modeshape.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.jboss.arquillian</groupId>
        <artifactId>arquillian-bom</artifactId>
        <version>${arquillian.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>servlet-api</artifactId>
        <version>${version.javax.servlet}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>javax.portlet</groupId>
        <artifactId>portlet-api</artifactId>
        <version>${version.javax.portlet}</version>
        <scope>provided</scope>
        <type>jar</type>
      </dependency>
      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>1.2.16</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>commons-fileupload</groupId>
        <artifactId>commons-fileupload</artifactId>
        <version>1.2.2</version>
      </dependency>
      <dependency>
        <groupId>org.exoplatform.kernel</groupId>
        <artifactId>exo.kernel.container</artifactId>
        <version>${org.exoplatform.kernel.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.exoplatform.core</groupId>
        <artifactId>exo.core.component.organization.api</artifactId>
        <version>${org.exoplatform.core.version}</version>
        <scope>provided</scope>
      </dependency>

    </dependencies>

  </dependencyManagement>


  <build>
    <!-- This section defines the default plugin settings inherited by child projects. -->
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <!-- <forkMode>always</forkMode> -->
            <systemProperties combine.children="append">
              <property>
                <name>java.io.tmpdir</name>
                <value>${basedir}/target</value>
              </property>
              <property>
                <name>java.net.preferIPv4Stack</name>
                <value>${jgroups.preferIpv4}</value>
              </property>
              <property>
                <name>java.net.preferIPv6Addresses</name>
                <value>${jgroups.preferIpv6}</value>
              </property>
            </systemProperties>
            <argLine>-Xmx1024M ${debug.argline} -XX:MaxPermSize=256M</argLine>
            <runOrder>alphabetical</runOrder>
          </configuration>
        </plugin>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <versionRange>[1.6,)</versionRange>
                    <goals>
                      <goal>run</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <versionRange>[2.9.1,)</versionRange>
                    <goals>
                      <goal>checkstyle</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>

        <!-- Checkstyle -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${checkstyle.version}</version>
          <configuration>
            <configLocation>gatein-portal-checkstyle/checkstyle.xml</configLocation>
            <consoleOutput>true</consoleOutput>
            <failsOnError>true</failsOnError>
            <useFile />
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.gatein</groupId>
              <artifactId>gatein-portal-build-config</artifactId>
              <version>${gatein.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>check-style</id>
              <phase>compile</phase>
              <goals>
                <goal>checkstyle</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <repository>
      <id>jboss-public-repository-group</id>
      <name>JBoss Public Maven Repository Group</name>
      <url>https://repository.jboss.org/nexus/content/groups/public/</url>
      <layout>default</layout>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
      </snapshots>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>jboss-public-repository-group-plugins</id>
      <name>JBoss Public Maven Repository Group</name>
      <url>https://repository.jboss.org/nexus/content/groups/public/</url>
      <layout>default</layout>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <profiles>
    <profile>
      <id>arquillian-jbossas-managed</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.jboss.spec</groupId>
          <artifactId>jboss-javaee-6.0</artifactId>
          <version>1.0.0.Final</version>
          <type>pom</type>
          <scope>provided</scope>
        </dependency>
        <!--
          Managed container.
          Uncomment to launch JBossAS in the mvn test phase.
        -->

        <dependency>
          <groupId>org.jboss.as</groupId>
          <artifactId>jboss-as-arquillian-container-managed</artifactId>
          <scope>test</scope>
        </dependency>
        <!--
          Remote container.
          Uncomment for remote container.
          JBossAS must be up and running.
          Useful for remote debugging.
          <dependency>
          <groupId>org.jboss.as</groupId>
          <artifactId>jboss-as-arquillian-container-remote</artifactId>
          <scope>test</scope>
          </dependency>
        -->

        <dependency>
          <groupId>org.jboss.arquillian.protocol</groupId>
          <artifactId>arquillian-protocol-servlet</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

</project>